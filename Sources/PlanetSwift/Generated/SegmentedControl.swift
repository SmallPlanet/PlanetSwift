//
// Autogenerated by gaxb at 02:06:09 PM on 02/06/15
//

import UIKit

public class SegmentedControl: SegmentedControlBase {
    lazy public var segmentedControl = UISegmentedControl()
    
    override public var control: UIControl? {
        get {
            return segmentedControl
        }
        set {
            if let newValue = newValue as? UISegmentedControl {
                segmentedControl = newValue
            }
        }
    }
    
    open override func gaxbPrepare() {
        super.gaxbPrepare()
        segmentedControl.tintColor = tintColor
        segmentedControl.setTitleTextAttributes(textAttributes(UIControl.State()) as? [NSAttributedString.Key : Any], for: UIControl.State())
        segmentedControl.setTitleTextAttributes(textAttributes(.selected) as? [NSAttributedString.Key : Any], for: .selected)
    }

    private func textAttributes(_ state: UIControl.State) -> [NSObject : AnyObject]? {
        var attributes: [NSObject : AnyObject] = Dictionary()
        if state == UIControl.State() {
            if let textColorNormal = textColorNormal {
                attributes.updateValue(textColorNormal, forKey: NSAttributedString.Key.foregroundColor as NSObject)
            }
            if let fontNormal = fontNormal {
                let font = UIFont(name: fontNormal, size:CGFloat(fontSizeNormal))!
                attributes.updateValue(font, forKey: NSAttributedString.Key.font as NSObject)
            }
            return attributes
        }
        if state == UIControl.State.selected {
            if let textColorSelected = textColorSelected {
                attributes.updateValue(textColorSelected, forKey: NSAttributedString.Key.foregroundColor as NSObject)
            }
            if let fontSelected = fontSelected {
                let font = UIFont(name: fontSelected, size:CGFloat(fontSizeSelected))!
                attributes.updateValue(font, forKey: NSAttributedString.Key.font as NSObject)
            }
            return attributes
        }
        return nil
    }
    
}
